
// This file has been generated by the GUI designer. Do not modify.
namespace MathObjects.UI.Widgets
{
	public partial class KeyBoardWidget
	{
		private global::Gtk.HBox hbox1;
		
		private global::Gtk.Button buttonLeft;
		
		private global::Gtk.HPaned hpaned1;
		
		private global::Gtk.Button buttonRight;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MathObjects.UI.Widgets.KeyBoardWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "MathObjects.UI.Widgets.KeyBoardWidget";
			// Container child MathObjects.UI.Widgets.KeyBoardWidget.Gtk.Container+ContainerChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.buttonLeft = new global::Gtk.Button ();
			this.buttonLeft.CanFocus = true;
			this.buttonLeft.Name = "buttonLeft";
			this.buttonLeft.UseUnderline = true;
			this.buttonLeft.Label = global::Mono.Unix.Catalog.GetString ("<<");
			this.hbox1.Add (this.buttonLeft);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.buttonLeft]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this.hpaned1 = new global::Gtk.HPaned ();
			this.hpaned1.CanFocus = true;
			this.hpaned1.Name = "hpaned1";
			this.hpaned1.Position = 10;
			this.hbox1.Add (this.hpaned1);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.hpaned1]));
			w2.Position = 1;
			// Container child hbox1.Gtk.Box+BoxChild
			this.buttonRight = new global::Gtk.Button ();
			this.buttonRight.CanFocus = true;
			this.buttonRight.Name = "buttonRight";
			this.buttonRight.UseUnderline = true;
			this.buttonRight.Label = global::Mono.Unix.Catalog.GetString (">>");
			this.hbox1.Add (this.buttonRight);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.buttonRight]));
			w3.Position = 2;
			w3.Expand = false;
			w3.Fill = false;
			this.Add (this.hbox1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
		}
	}
}
