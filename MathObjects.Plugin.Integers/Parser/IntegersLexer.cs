//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Integers.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public partial class IntegersLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, INT=5, DIGIT=6, LETTER=7, ID=8, TOP=9, 
		MUL=10, ADD=11, SUB=12, WS=13;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "INT", "DIGIT", "LETTER", "ID", "TOP", 
		"MUL", "ADD", "SUB", "WS"
	};


	public IntegersLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'^'", "','", null, null, null, null, "'top'", "'*'", 
		"'+'", "'-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, "INT", "DIGIT", "LETTER", "ID", "TOP", "MUL", 
		"ADD", "SUB", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Integers.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\xFG\b\x1\x4\x2\t"+
		"\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4\t"+
		"\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x3\x2\x3\x2\x3\x3"+
		"\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x6\x6\'\n\x6\r\x6\xE\x6(\x3\a\x3"+
		"\a\x3\b\x3\b\x3\t\x3\t\x3\t\a\t\x32\n\t\f\t\xE\t\x35\v\t\x3\n\x3\n\x3"+
		"\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x6\xE\x42\n\xE\r\xE\xE\xE"+
		"\x43\x3\xE\x3\xE\x2\x2\xF\x3\x3\x5\x4\a\x5\t\x6\v\a\r\b\xF\t\x11\n\x13"+
		"\v\x15\f\x17\r\x19\xE\x1B\xF\x3\x2\x5\x3\x2\x32;\x6\x2\x43\\\x61\x61\x63"+
		"|\x82\x101\x5\x2\v\f\xF\xF\"\"J\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2"+
		"\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x3\x1D\x3\x2"+
		"\x2\x2\x5\x1F\x3\x2\x2\x2\a!\x3\x2\x2\x2\t#\x3\x2\x2\x2\v&\x3\x2\x2\x2"+
		"\r*\x3\x2\x2\x2\xF,\x3\x2\x2\x2\x11.\x3\x2\x2\x2\x13\x36\x3\x2\x2\x2\x15"+
		":\x3\x2\x2\x2\x17<\x3\x2\x2\x2\x19>\x3\x2\x2\x2\x1B\x41\x3\x2\x2\x2\x1D"+
		"\x1E\a*\x2\x2\x1E\x4\x3\x2\x2\x2\x1F \a+\x2\x2 \x6\x3\x2\x2\x2!\"\a`\x2"+
		"\x2\"\b\x3\x2\x2\x2#$\a.\x2\x2$\n\x3\x2\x2\x2%\'\t\x2\x2\x2&%\x3\x2\x2"+
		"\x2\'(\x3\x2\x2\x2(&\x3\x2\x2\x2()\x3\x2\x2\x2)\f\x3\x2\x2\x2*+\t\x2\x2"+
		"\x2+\xE\x3\x2\x2\x2,-\t\x3\x2\x2-\x10\x3\x2\x2\x2.\x33\x5\xF\b\x2/\x32"+
		"\x5\xF\b\x2\x30\x32\x5\r\a\x2\x31/\x3\x2\x2\x2\x31\x30\x3\x2\x2\x2\x32"+
		"\x35\x3\x2\x2\x2\x33\x31\x3\x2\x2\x2\x33\x34\x3\x2\x2\x2\x34\x12\x3\x2"+
		"\x2\x2\x35\x33\x3\x2\x2\x2\x36\x37\av\x2\x2\x37\x38\aq\x2\x2\x38\x39\a"+
		"r\x2\x2\x39\x14\x3\x2\x2\x2:;\a,\x2\x2;\x16\x3\x2\x2\x2<=\a-\x2\x2=\x18"+
		"\x3\x2\x2\x2>?\a/\x2\x2?\x1A\x3\x2\x2\x2@\x42\t\x4\x2\x2\x41@\x3\x2\x2"+
		"\x2\x42\x43\x3\x2\x2\x2\x43\x41\x3\x2\x2\x2\x43\x44\x3\x2\x2\x2\x44\x45"+
		"\x3\x2\x2\x2\x45\x46\b\xE\x2\x2\x46\x1C\x3\x2\x2\x2\a\x2(\x31\x33\x43"+
		"\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
