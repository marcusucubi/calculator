//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from FloatingPoint.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public partial class FloatingPointLexer : Lexer {
	public const int
		T__0=1, T__1=2, INT=3, FLOAT=4, DIGIT=5, MUL=6, DIV=7, ADD=8, SUB=9, PI=10, 
		TOP=11, WS=12;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "INT", "FLOAT", "DIGIT", "MUL", "DIV", "ADD", "SUB", "PI", 
		"TOP", "WS"
	};


	public FloatingPointLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", null, null, null, "'*'", "'/'", "'+'", "'-'", "'pi'", 
		"'top'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, "INT", "FLOAT", "DIGIT", "MUL", "DIV", "ADD", "SUB", 
		"PI", "TOP", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "FloatingPoint.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\xEP\b\x1\x4\x2\t"+
		"\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4\t"+
		"\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4"+
		"\x6\x4!\n\x4\r\x4\xE\x4\"\x3\x5\x6\x5&\n\x5\r\x5\xE\x5\'\x3\x5\x3\x5\a"+
		"\x5,\n\x5\f\x5\xE\x5/\v\x5\x3\x5\x3\x5\x6\x5\x33\n\x5\r\x5\xE\x5\x34\x5"+
		"\x5\x37\n\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v"+
		"\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\r\x6\rK\n\r\r\r\xE\rL\x3\r\x3\r\x2\x2"+
		"\xE\x3\x3\x5\x4\a\x5\t\x6\v\a\r\b\xF\t\x11\n\x13\v\x15\f\x17\r\x19\xE"+
		"\x3\x2\x4\x3\x2\x32;\x5\x2\v\f\xF\xF\"\"U\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2"+
		"\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2"+
		"\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3"+
		"\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x3\x1B\x3\x2\x2\x2\x5"+
		"\x1D\x3\x2\x2\x2\a \x3\x2\x2\x2\t\x36\x3\x2\x2\x2\v\x38\x3\x2\x2\x2\r"+
		":\x3\x2\x2\x2\xF<\x3\x2\x2\x2\x11>\x3\x2\x2\x2\x13@\x3\x2\x2\x2\x15\x42"+
		"\x3\x2\x2\x2\x17\x45\x3\x2\x2\x2\x19J\x3\x2\x2\x2\x1B\x1C\a*\x2\x2\x1C"+
		"\x4\x3\x2\x2\x2\x1D\x1E\a+\x2\x2\x1E\x6\x3\x2\x2\x2\x1F!\t\x2\x2\x2 \x1F"+
		"\x3\x2\x2\x2!\"\x3\x2\x2\x2\" \x3\x2\x2\x2\"#\x3\x2\x2\x2#\b\x3\x2\x2"+
		"\x2$&\x5\v\x6\x2%$\x3\x2\x2\x2&\'\x3\x2\x2\x2\'%\x3\x2\x2\x2\'(\x3\x2"+
		"\x2\x2()\x3\x2\x2\x2)-\a\x30\x2\x2*,\x5\v\x6\x2+*\x3\x2\x2\x2,/\x3\x2"+
		"\x2\x2-+\x3\x2\x2\x2-.\x3\x2\x2\x2.\x37\x3\x2\x2\x2/-\x3\x2\x2\x2\x30"+
		"\x32\a\x30\x2\x2\x31\x33\x5\v\x6\x2\x32\x31\x3\x2\x2\x2\x33\x34\x3\x2"+
		"\x2\x2\x34\x32\x3\x2\x2\x2\x34\x35\x3\x2\x2\x2\x35\x37\x3\x2\x2\x2\x36"+
		"%\x3\x2\x2\x2\x36\x30\x3\x2\x2\x2\x37\n\x3\x2\x2\x2\x38\x39\t\x2\x2\x2"+
		"\x39\f\x3\x2\x2\x2:;\a,\x2\x2;\xE\x3\x2\x2\x2<=\a\x31\x2\x2=\x10\x3\x2"+
		"\x2\x2>?\a-\x2\x2?\x12\x3\x2\x2\x2@\x41\a/\x2\x2\x41\x14\x3\x2\x2\x2\x42"+
		"\x43\ar\x2\x2\x43\x44\ak\x2\x2\x44\x16\x3\x2\x2\x2\x45\x46\av\x2\x2\x46"+
		"G\aq\x2\x2GH\ar\x2\x2H\x18\x3\x2\x2\x2IK\t\x3\x2\x2JI\x3\x2\x2\x2KL\x3"+
		"\x2\x2\x2LJ\x3\x2\x2\x2LM\x3\x2\x2\x2MN\x3\x2\x2\x2NO\b\r\x2\x2O\x1A\x3"+
		"\x2\x2\x2\t\x2\"\'-\x34\x36L\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
