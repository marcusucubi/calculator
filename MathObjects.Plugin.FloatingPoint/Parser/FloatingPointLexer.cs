//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from FloatingPoint.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public partial class FloatingPointLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, INT=4, FLOAT=5, DIGIT=6, LETTER=7, ID=8, PI=9, 
		TOP=10, MUL=11, DIV=12, ADD=13, SUB=14, WS=15;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "INT", "FLOAT", "DIGIT", "LETTER", "ID", "PI", 
		"TOP", "MUL", "DIV", "ADD", "SUB", "WS"
	};


	public FloatingPointLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "','", null, null, null, null, null, "'pi'", "'top'", 
		"'*'", "'/'", "'+'", "'-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, "INT", "FLOAT", "DIGIT", "LETTER", "ID", "PI", 
		"TOP", "MUL", "DIV", "ADD", "SUB", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "FloatingPoint.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\x11\x62\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x6\x5)\n\x5\r\x5"+
		"\xE\x5*\x3\x6\x6\x6.\n\x6\r\x6\xE\x6/\x3\x6\x3\x6\a\x6\x34\n\x6\f\x6\xE"+
		"\x6\x37\v\x6\x3\x6\x3\x6\x6\x6;\n\x6\r\x6\xE\x6<\x5\x6?\n\x6\x3\a\x3\a"+
		"\x3\b\x3\b\x3\t\x3\t\x3\t\a\tH\n\t\f\t\xE\tK\v\t\x3\n\x3\n\x3\n\x3\v\x3"+
		"\v\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x6\x10"+
		"]\n\x10\r\x10\xE\x10^\x3\x10\x3\x10\x2\x2\x11\x3\x3\x5\x4\a\x5\t\x6\v"+
		"\a\r\b\xF\t\x11\n\x13\v\x15\f\x17\r\x19\xE\x1B\xF\x1D\x10\x1F\x11\x3\x2"+
		"\x5\x3\x2\x32;\x6\x2\x43\\\x61\x61\x63|\x82\x101\x5\x2\v\f\xF\xF\"\"i"+
		"\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2"+
		"\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2"+
		"\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2"+
		"\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x3!\x3"+
		"\x2\x2\x2\x5#\x3\x2\x2\x2\a%\x3\x2\x2\x2\t(\x3\x2\x2\x2\v>\x3\x2\x2\x2"+
		"\r@\x3\x2\x2\x2\xF\x42\x3\x2\x2\x2\x11\x44\x3\x2\x2\x2\x13L\x3\x2\x2\x2"+
		"\x15O\x3\x2\x2\x2\x17S\x3\x2\x2\x2\x19U\x3\x2\x2\x2\x1BW\x3\x2\x2\x2\x1D"+
		"Y\x3\x2\x2\x2\x1F\\\x3\x2\x2\x2!\"\a*\x2\x2\"\x4\x3\x2\x2\x2#$\a+\x2\x2"+
		"$\x6\x3\x2\x2\x2%&\a.\x2\x2&\b\x3\x2\x2\x2\')\t\x2\x2\x2(\'\x3\x2\x2\x2"+
		")*\x3\x2\x2\x2*(\x3\x2\x2\x2*+\x3\x2\x2\x2+\n\x3\x2\x2\x2,.\x5\r\a\x2"+
		"-,\x3\x2\x2\x2./\x3\x2\x2\x2/-\x3\x2\x2\x2/\x30\x3\x2\x2\x2\x30\x31\x3"+
		"\x2\x2\x2\x31\x35\a\x30\x2\x2\x32\x34\x5\r\a\x2\x33\x32\x3\x2\x2\x2\x34"+
		"\x37\x3\x2\x2\x2\x35\x33\x3\x2\x2\x2\x35\x36\x3\x2\x2\x2\x36?\x3\x2\x2"+
		"\x2\x37\x35\x3\x2\x2\x2\x38:\a\x30\x2\x2\x39;\x5\r\a\x2:\x39\x3\x2\x2"+
		"\x2;<\x3\x2\x2\x2<:\x3\x2\x2\x2<=\x3\x2\x2\x2=?\x3\x2\x2\x2>-\x3\x2\x2"+
		"\x2>\x38\x3\x2\x2\x2?\f\x3\x2\x2\x2@\x41\t\x2\x2\x2\x41\xE\x3\x2\x2\x2"+
		"\x42\x43\t\x3\x2\x2\x43\x10\x3\x2\x2\x2\x44I\x5\xF\b\x2\x45H\x5\xF\b\x2"+
		"\x46H\x5\r\a\x2G\x45\x3\x2\x2\x2G\x46\x3\x2\x2\x2HK\x3\x2\x2\x2IG\x3\x2"+
		"\x2\x2IJ\x3\x2\x2\x2J\x12\x3\x2\x2\x2KI\x3\x2\x2\x2LM\ar\x2\x2MN\ak\x2"+
		"\x2N\x14\x3\x2\x2\x2OP\av\x2\x2PQ\aq\x2\x2QR\ar\x2\x2R\x16\x3\x2\x2\x2"+
		"ST\a,\x2\x2T\x18\x3\x2\x2\x2UV\a\x31\x2\x2V\x1A\x3\x2\x2\x2WX\a-\x2\x2"+
		"X\x1C\x3\x2\x2\x2YZ\a/\x2\x2Z\x1E\x3\x2\x2\x2[]\t\x4\x2\x2\\[\x3\x2\x2"+
		"\x2]^\x3\x2\x2\x2^\\\x3\x2\x2\x2^_\x3\x2\x2\x2_`\x3\x2\x2\x2`\x61\b\x10"+
		"\x2\x2\x61 \x3\x2\x2\x2\v\x2*/\x35<>GI^\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
