//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from FloatingPoint.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public partial class FloatingPointLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, INT=5, FLOAT=6, DIGIT=7, LETTER=8, ID=9, 
		PI=10, TOP=11, MUL=12, DIV=13, ADD=14, SUB=15, WS=16;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "INT", "FLOAT", "DIGIT", "LETTER", "ID", 
		"PI", "TOP", "MUL", "DIV", "ADD", "SUB", "WS"
	};


	public FloatingPointLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'^'", "','", null, null, null, null, null, "'pi'", 
		"'top'", "'*'", "'/'", "'+'", "'-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, "INT", "FLOAT", "DIGIT", "LETTER", "ID", 
		"PI", "TOP", "MUL", "DIV", "ADD", "SUB", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "FloatingPoint.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\x12\x66\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5"+
		"\x3\x6\x6\x6-\n\x6\r\x6\xE\x6.\x3\a\x6\a\x32\n\a\r\a\xE\a\x33\x3\a\x3"+
		"\a\a\a\x38\n\a\f\a\xE\a;\v\a\x3\a\x3\a\x6\a?\n\a\r\a\xE\a@\x5\a\x43\n"+
		"\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\n\a\nL\n\n\f\n\xE\nO\v\n\x3\v\x3\v"+
		"\x3\v\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3"+
		"\x10\x3\x11\x6\x11\x61\n\x11\r\x11\xE\x11\x62\x3\x11\x3\x11\x2\x2\x12"+
		"\x3\x3\x5\x4\a\x5\t\x6\v\a\r\b\xF\t\x11\n\x13\v\x15\f\x17\r\x19\xE\x1B"+
		"\xF\x1D\x10\x1F\x11!\x12\x3\x2\x5\x3\x2\x32;\x6\x2\x43\\\x61\x61\x63|"+
		"\x82\x101\x5\x2\v\f\xF\xF\"\"m\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2"+
		"\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x3#\x3\x2\x2\x2\x5%\x3\x2\x2"+
		"\x2\a\'\x3\x2\x2\x2\t)\x3\x2\x2\x2\v,\x3\x2\x2\x2\r\x42\x3\x2\x2\x2\xF"+
		"\x44\x3\x2\x2\x2\x11\x46\x3\x2\x2\x2\x13H\x3\x2\x2\x2\x15P\x3\x2\x2\x2"+
		"\x17S\x3\x2\x2\x2\x19W\x3\x2\x2\x2\x1BY\x3\x2\x2\x2\x1D[\x3\x2\x2\x2\x1F"+
		"]\x3\x2\x2\x2!`\x3\x2\x2\x2#$\a*\x2\x2$\x4\x3\x2\x2\x2%&\a+\x2\x2&\x6"+
		"\x3\x2\x2\x2\'(\a`\x2\x2(\b\x3\x2\x2\x2)*\a.\x2\x2*\n\x3\x2\x2\x2+-\t"+
		"\x2\x2\x2,+\x3\x2\x2\x2-.\x3\x2\x2\x2.,\x3\x2\x2\x2./\x3\x2\x2\x2/\f\x3"+
		"\x2\x2\x2\x30\x32\x5\xF\b\x2\x31\x30\x3\x2\x2\x2\x32\x33\x3\x2\x2\x2\x33"+
		"\x31\x3\x2\x2\x2\x33\x34\x3\x2\x2\x2\x34\x35\x3\x2\x2\x2\x35\x39\a\x30"+
		"\x2\x2\x36\x38\x5\xF\b\x2\x37\x36\x3\x2\x2\x2\x38;\x3\x2\x2\x2\x39\x37"+
		"\x3\x2\x2\x2\x39:\x3\x2\x2\x2:\x43\x3\x2\x2\x2;\x39\x3\x2\x2\x2<>\a\x30"+
		"\x2\x2=?\x5\xF\b\x2>=\x3\x2\x2\x2?@\x3\x2\x2\x2@>\x3\x2\x2\x2@\x41\x3"+
		"\x2\x2\x2\x41\x43\x3\x2\x2\x2\x42\x31\x3\x2\x2\x2\x42<\x3\x2\x2\x2\x43"+
		"\xE\x3\x2\x2\x2\x44\x45\t\x2\x2\x2\x45\x10\x3\x2\x2\x2\x46G\t\x3\x2\x2"+
		"G\x12\x3\x2\x2\x2HM\x5\x11\t\x2IL\x5\x11\t\x2JL\x5\xF\b\x2KI\x3\x2\x2"+
		"\x2KJ\x3\x2\x2\x2LO\x3\x2\x2\x2MK\x3\x2\x2\x2MN\x3\x2\x2\x2N\x14\x3\x2"+
		"\x2\x2OM\x3\x2\x2\x2PQ\ar\x2\x2QR\ak\x2\x2R\x16\x3\x2\x2\x2ST\av\x2\x2"+
		"TU\aq\x2\x2UV\ar\x2\x2V\x18\x3\x2\x2\x2WX\a,\x2\x2X\x1A\x3\x2\x2\x2YZ"+
		"\a\x31\x2\x2Z\x1C\x3\x2\x2\x2[\\\a-\x2\x2\\\x1E\x3\x2\x2\x2]^\a/\x2\x2"+
		"^ \x3\x2\x2\x2_\x61\t\x4\x2\x2`_\x3\x2\x2\x2\x61\x62\x3\x2\x2\x2\x62`"+
		"\x3\x2\x2\x2\x62\x63\x3\x2\x2\x2\x63\x64\x3\x2\x2\x2\x64\x65\b\x11\x2"+
		"\x2\x65\"\x3\x2\x2\x2\v\x2.\x33\x39@\x42KM\x62\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
