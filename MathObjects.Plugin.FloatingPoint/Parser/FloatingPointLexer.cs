//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from FloatingPoint.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public partial class FloatingPointLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, INT=7, FLOAT=8, DIGIT=9, 
		LETTER=10, ID=11, MUL=12, DIV=13, ADD=14, SUB=15, WS=16;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "INT", "FLOAT", "DIGIT", 
		"LETTER", "ID", "MUL", "DIV", "ADD", "SUB", "WS"
	};


	public FloatingPointLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'='", "';'", "'('", "')'", "'^'", "','", null, null, null, null, 
		null, "'*'", "'/'", "'+'", "'-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, "INT", "FLOAT", "DIGIT", "LETTER", 
		"ID", "MUL", "DIV", "ADD", "SUB", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "FloatingPoint.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\x12\x63\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5"+
		"\x3\x6\x3\x6\x3\a\x3\a\x3\b\x6\b\x31\n\b\r\b\xE\b\x32\x3\t\x6\t\x36\n"+
		"\t\r\t\xE\t\x37\x3\t\x3\t\a\t<\n\t\f\t\xE\t?\v\t\x3\t\x3\t\x6\t\x43\n"+
		"\t\r\t\xE\t\x44\x5\tG\n\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\f\a\fP\n\f"+
		"\f\f\xE\fS\v\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11"+
		"\x6\x11^\n\x11\r\x11\xE\x11_\x3\x11\x3\x11\x2\x2\x12\x3\x3\x5\x4\a\x5"+
		"\t\x6\v\a\r\b\xF\t\x11\n\x13\v\x15\f\x17\r\x19\xE\x1B\xF\x1D\x10\x1F\x11"+
		"!\x12\x3\x2\x5\x3\x2\x32;\x6\x2\x43\\\x61\x61\x63|\x82\x101\x5\x2\v\f"+
		"\xF\xF\"\"j\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t"+
		"\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11"+
		"\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2"+
		"\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2"+
		"\x2\x2\x2!\x3\x2\x2\x2\x3#\x3\x2\x2\x2\x5%\x3\x2\x2\x2\a\'\x3\x2\x2\x2"+
		"\t)\x3\x2\x2\x2\v+\x3\x2\x2\x2\r-\x3\x2\x2\x2\xF\x30\x3\x2\x2\x2\x11\x46"+
		"\x3\x2\x2\x2\x13H\x3\x2\x2\x2\x15J\x3\x2\x2\x2\x17L\x3\x2\x2\x2\x19T\x3"+
		"\x2\x2\x2\x1BV\x3\x2\x2\x2\x1DX\x3\x2\x2\x2\x1FZ\x3\x2\x2\x2!]\x3\x2\x2"+
		"\x2#$\a?\x2\x2$\x4\x3\x2\x2\x2%&\a=\x2\x2&\x6\x3\x2\x2\x2\'(\a*\x2\x2"+
		"(\b\x3\x2\x2\x2)*\a+\x2\x2*\n\x3\x2\x2\x2+,\a`\x2\x2,\f\x3\x2\x2\x2-."+
		"\a.\x2\x2.\xE\x3\x2\x2\x2/\x31\t\x2\x2\x2\x30/\x3\x2\x2\x2\x31\x32\x3"+
		"\x2\x2\x2\x32\x30\x3\x2\x2\x2\x32\x33\x3\x2\x2\x2\x33\x10\x3\x2\x2\x2"+
		"\x34\x36\x5\x13\n\x2\x35\x34\x3\x2\x2\x2\x36\x37\x3\x2\x2\x2\x37\x35\x3"+
		"\x2\x2\x2\x37\x38\x3\x2\x2\x2\x38\x39\x3\x2\x2\x2\x39=\a\x30\x2\x2:<\x5"+
		"\x13\n\x2;:\x3\x2\x2\x2<?\x3\x2\x2\x2=;\x3\x2\x2\x2=>\x3\x2\x2\x2>G\x3"+
		"\x2\x2\x2?=\x3\x2\x2\x2@\x42\a\x30\x2\x2\x41\x43\x5\x13\n\x2\x42\x41\x3"+
		"\x2\x2\x2\x43\x44\x3\x2\x2\x2\x44\x42\x3\x2\x2\x2\x44\x45\x3\x2\x2\x2"+
		"\x45G\x3\x2\x2\x2\x46\x35\x3\x2\x2\x2\x46@\x3\x2\x2\x2G\x12\x3\x2\x2\x2"+
		"HI\t\x2\x2\x2I\x14\x3\x2\x2\x2JK\t\x3\x2\x2K\x16\x3\x2\x2\x2LQ\x5\x15"+
		"\v\x2MP\x5\x15\v\x2NP\x5\x13\n\x2OM\x3\x2\x2\x2ON\x3\x2\x2\x2PS\x3\x2"+
		"\x2\x2QO\x3\x2\x2\x2QR\x3\x2\x2\x2R\x18\x3\x2\x2\x2SQ\x3\x2\x2\x2TU\a"+
		",\x2\x2U\x1A\x3\x2\x2\x2VW\a\x31\x2\x2W\x1C\x3\x2\x2\x2XY\a-\x2\x2Y\x1E"+
		"\x3\x2\x2\x2Z[\a/\x2\x2[ \x3\x2\x2\x2\\^\t\x4\x2\x2]\\\x3\x2\x2\x2^_\x3"+
		"\x2\x2\x2_]\x3\x2\x2\x2_`\x3\x2\x2\x2`\x61\x3\x2\x2\x2\x61\x62\b\x11\x2"+
		"\x2\x62\"\x3\x2\x2\x2\v\x2\x32\x37=\x44\x46OQ_\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
